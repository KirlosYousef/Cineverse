name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: macos-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'

      - name: Debug directory structure
        run: |
          pwd
          ls -la
          echo "Checking for Xcode project files:"
          find . -name "*.xcodeproj" -o -name "*.xcworkspace" | head -10

      - name: Cache Xcode derived data
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-${{ hashFiles('**/*.xcodeproj') }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      - name: Build Cineverse
        run: |
          xcodebuild -project ./Cineverse.xcodeproj -scheme Cineverse \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.4' \
            -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
            build | xcpretty

      - name: Run unit tests
        run: |
          xcodebuild test -project ./Cineverse.xcodeproj -scheme Cineverse \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.4' \
            -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
            | xcpretty

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult 